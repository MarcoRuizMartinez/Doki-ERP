<template>
  <q-page                     padding
    class                     ="row item-stretch content-start justify-start q-col-gutter-lg"
    >
    <ventana
      class                       ="col-12"
      class-contenido             ="row"
      height                      ="100%"
      size-icon-carga             ="22em"
      icono                       ="mdi-chart-areaspline"      
      titulo                      ="Informe de cotizaciones"
      mensaje-sin-resultados      ="No se encontraron datos"
      :modo                       ="modo"
      >
      <template                   #menu>
        
      </template>
    </ventana>
<!--
  <panel titulo           ="Informes de cotizaciones">
        <q-btn-toggle         dense no-caps spread stretch 
          v-model             ="tiempo"
          toggle-color        ="primary"
          :options            ="tiempos"
        />
      </panel>
-->  
    <!-- formato                 ="porcentaje" -->
    <ventana-apex-chart
      class                   ="col-6"
      :titulo                 ="'Cotizaciones por estado ' + (!!comercial ? ' de ' + comercial : '')"      
      :series                 ="estadosCtzSerie"
      :tiempo                 ="tiempo"
      >
      <q-select               dense filled  hide-bottom-space borderless
        class                 ="campo-hundido"
        v-model               ="comercial"
        :options              ="comerciales"
      />
    </ventana-apex-chart>
    <!-- formato                 ="porcentaje" -->
    <ventana-apex-chart
      class                   ="col-6"
      titulo                  ="Cotizaciones realizadas"      
      :series                 ="cuentaCtzSerie"
      :tiempo                 ="tiempo"
    />  
    <ventana-apex-chart
      class                   ="col-6"
      titulo                  ="Total cotizado"
      formato                 ="precio"      
      :series                 ="totalesCtzConTotalSerie"
      :tiempo                 ="tiempo"
    />      
    <ventana-apex-chart
      class                   ="col-6"
      titulo                  ="Total cotizado sin totalizar"
      formato                 ="precio"      
      :series                 ="totalesCtzSinTotalSerie"
      :tiempo                 ="tiempo"
    />     
  </q-page>
</template>

<script setup lang="ts">
  // * ///////////////////////////////////////////////////////////////////////// Core
  import {  ref,
            watch,  
            computed,
            onMounted,
            onUnmounted,
                                } from "vue"
  import {  useRouter           } from "vue-router"
  import {  useTitle            } from "@vueuse/core"
  // * /////////////////////////////////////////////////////////////////////////////////// Store
  import {  storeToRefs         } from 'pinia'
  import {  useStoreUser        } from 'src/stores/user'
  import {  useStoreAcuerdo     } from "src/stores/acuerdo"
  
  // * ///////////////////////////////////////////////////////////////////////// Componibles
  import {  useTools            } from "src/useSimpleOk/useTools"
  //import {  useInformesCtz      } from "src/areas/acuerdos/composables/useInformesCtz.ts.txt"
  import {  style               } from "src/useSimpleOk/useEstilos"
  import {  IQuery              } from "src/models/Busqueda"

  // * ///////////////////////////////////////////////////////////////////////// Modelos
  import {  Tiempo,             } from "src/models/TiposInformes"
  import {  ILabelValue,
            ModosVentana        } from "src/models/TiposVarios"

  // * ///////////////////////////////////////////////////////////////////////// Componentes  
  import    ventana               from "components/utilidades/Ventana.vue"
  import    ventanaApexChart      from "components/utilidades/VentanaX.vue"
  import    barraBusqueda         from "src/areas/acuerdos/components/Informes/BarraBusquedaInfomes.vue"

  


  

  const {
          generarSeriesTotales,
          generarSeriesEstados,
          comerciales,
          cuentaCtzSerie,
          totalesCtzConTotalSerie,
          totalesCtzSinTotalSerie,
          estadosCtzSerie,
        }                         = useInformesCtz()

  const title                     = useTitle("ðŸ“ˆInformes Cotizaciones")
  const modo                      = ref< ModosVentana >("esperando-busqueda")
  const { esMobil, aviso        } = useTools()
  const { usuario, permisos     } = storeToRefs( useStoreUser() )
  const { busqueda : b          } = storeToRefs( useStoreAcuerdo() )
  const router                    = useRouter()
  
  onMounted(iniciar)  

  async function iniciar()
  {
    await b.value.montarBusqueda( usuario.value.id, router, false, false, 100 )
    asignarValoresPorDefecto()

    modo.value                    = "esperando-busqueda"
  }

  onUnmounted(()=>{
    
    b.value.desmontarBusqueda()
  })




  async function buscar( query : IQuery )
  {
    modo.value                    = "buscando"
    await cargarInformes()
    await cargarInformesEstados()
    await generarSeriesEstados(tiempo.value, comercial.value)

    modo.value                    = !!costos.value.length ? "normal" : "sin-resultados"
  }

  async function cargarInformes()  
  {
    await generarSeriesTotales(tiempo.value)

    if(!comercial.value && !!comerciales.value.length)
    {
      const usuarioEstaEnInforme  = comerciales.value.some( c => c === usuario.value.nombre )
      comercial.value             = usuarioEstaEnInforme ? usuario.value.nombre : comerciales.value[0]
    }
  }

  async function asignarValoresPorDefecto()
  {
/*     
    if(!b.value.f.qty)            b.value.f.qty         = 1
    if(!b.value.f.peso)           b.value.f.peso        = 10
    if(!b.value.f.valorMax)       b.value.f.valorMax    = 100000
    if(!b.value.f.municipio.id)   b.value.f.municipio   = await getMunicipioDB( 1 )
 */
  }

  function limpiarInforme()
  {
    modo.value                    = "esperando-busqueda"
  }  
</script>